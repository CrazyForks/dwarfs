# syntax=docker/dockerfile:1
#
###############################################################################
#
# DO NOT EDIT THIS FILE DIRECTLY!
#
# IT WAS GENERATED BY build_dockerfile.pl
#
###############################################################################

FROM alpine:latest AS base

RUN apk update
RUN apk upgrade
RUN apk add --no-cache \
        bash-completion \
        build-base \
        wget \
        curl \
        vim \
        tar \
        ripgrep \
        less \
        gcc \
        g++ \
        clang20 \
        lld \
        git \
        xz \
        gzip \
        bzip2 \
        zstd \
        ccache \
        ninja-build \
        cmake \
        make \
        bison \
        flex \
        ronn \
        perf \
        py3-pip \
        py3-xxhash \
        py3-zstd \
        py3-lz4 \
        fuse \
        fuse3 \
        pkgconf \
        meson \
        autoconf \
        strace \
        gdb \
        gmp-dev \
        zlib-static \
        zstd-static \
        zlib-dev \
        zstd-dev \
        mpfr-dev \
        mpc1-dev \
        isl-dev \
        texinfo \
        linux-headers \
        gdb-multiarch \
        rsync \
        screen \
        qemu-arm \
        qemu-armeb \
        qemu-i386 \
        qemu-mips \
        qemu-mipsel \
        qemu-ppc \
        qemu-riscv32 \
        qemu-sparc \
        qemu-aarch64 \
        qemu-aarch64_be \
        qemu-alpha \
        qemu-hppa \
        qemu-loongarch64 \
        qemu-mips64 \
        qemu-mips64el \
        qemu-ppc64 \
        qemu-ppc64le \
        qemu-riscv64 \
        qemu-s390x \
        qemu-sparc64

COPY fetch.sh /usr/local/bin/fetch.sh

# Install mold
COPY install-mold.sh /usr/local/bin/install-mold.sh
RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/install-mold.sh

# Install bloaty
COPY install-bloaty.sh /usr/local/bin/install-bloaty.sh
RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/install-bloaty.sh

RUN apk del linux-headers

FROM base AS build_base

COPY toolchain-versions.sh /usr/local/bin/toolchain-versions.sh
COPY toolchain-prepare.sh /usr/local/bin/toolchain-prepare.sh
COPY toolchain-install.sh /usr/local/bin/toolchain-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-prepare.sh

###############################################################################

FROM base AS staticlibs_base

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-fetch.sh /usr/local/bin/static-libs-fetch.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-fetch.sh

###############################################################################

FROM build_base AS toolchain_x86_64

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 x86_64

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_x86_64 AS staticlibs_x86_64_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all x86_64 gcc

###############################################################################

FROM toolchain_x86_64 AS staticlibs_x86_64_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all x86_64 clang

###############################################################################

FROM toolchain_x86_64 AS staticlibs_x86_64_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all x86_64 clang-lto

###############################################################################

FROM toolchain_x86_64 AS staticlibs_x86_64_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all x86_64 clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_aarch64

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 aarch64

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_aarch64 AS staticlibs_aarch64_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all aarch64 gcc

###############################################################################

FROM toolchain_aarch64 AS staticlibs_aarch64_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all aarch64 clang

###############################################################################

FROM toolchain_aarch64 AS staticlibs_aarch64_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all aarch64 clang-lto

###############################################################################

FROM toolchain_aarch64 AS staticlibs_aarch64_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all aarch64 clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_loongarch64

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 loongarch64

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_loongarch64 AS staticlibs_loongarch64_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all loongarch64 gcc

###############################################################################

FROM toolchain_loongarch64 AS staticlibs_loongarch64_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all loongarch64 clang

###############################################################################

FROM toolchain_loongarch64 AS staticlibs_loongarch64_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all loongarch64 clang-lto

###############################################################################

FROM toolchain_loongarch64 AS staticlibs_loongarch64_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all loongarch64 clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_riscv64

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 riscv64

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_riscv64 AS staticlibs_riscv64_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all riscv64 gcc

###############################################################################

FROM toolchain_riscv64 AS staticlibs_riscv64_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all riscv64 clang

###############################################################################

FROM toolchain_riscv64 AS staticlibs_riscv64_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all riscv64 clang-lto

###############################################################################

FROM toolchain_riscv64 AS staticlibs_riscv64_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all riscv64 clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_ppc64

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 ppc64

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_ppc64 AS staticlibs_ppc64_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all ppc64 gcc

###############################################################################

FROM build_base AS toolchain_ppc64le

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 ppc64le

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_ppc64le AS staticlibs_ppc64le_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all ppc64le gcc

###############################################################################

FROM build_base AS toolchain_s390x

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 s390x

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_s390x AS staticlibs_s390x_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all s390x gcc

###############################################################################

FROM toolchain_s390x AS staticlibs_s390x_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all s390x clang

###############################################################################

FROM toolchain_s390x AS staticlibs_s390x_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all s390x clang-lto

###############################################################################

FROM toolchain_s390x AS staticlibs_s390x_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all s390x clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_arm

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 arm

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_arm AS staticlibs_arm_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all arm gcc

###############################################################################

FROM toolchain_arm AS staticlibs_arm_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all arm clang

###############################################################################

FROM toolchain_arm AS staticlibs_arm_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all arm clang-lto

###############################################################################

FROM toolchain_arm AS staticlibs_arm_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all arm clang-minsize-lto

###############################################################################

FROM build_base AS toolchain_i386

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/toolchain-install.sh 2 i386

RUN apk del zlib-dev zstd-dev

###############################################################################

FROM toolchain_i386 AS staticlibs_i386_gcc

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all i386 gcc

###############################################################################

FROM toolchain_i386 AS staticlibs_i386_clang

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all i386 clang

###############################################################################

FROM toolchain_i386 AS staticlibs_i386_clang-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all i386 clang-lto

###############################################################################

FROM toolchain_i386 AS staticlibs_i386_clang-minsize-lto

COPY --link --from=staticlibs_base /root/pkgs/ /root/pkgs/

COPY static-libs-versions.sh /usr/local/bin/static-libs-versions.sh
COPY static-libs-install.sh /usr/local/bin/static-libs-install.sh

RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    bash /usr/local/bin/static-libs-install.sh :all i386 clang-minsize-lto

###############################################################################

FROM base AS final

COPY --link --from=toolchain_x86_64 /opt/cross/ /opt/cross/
COPY --link --from=toolchain_aarch64 /opt/cross/ /opt/cross/
COPY --link --from=toolchain_loongarch64 /opt/cross/ /opt/cross/
COPY --link --from=toolchain_riscv64 /opt/cross/ /opt/cross/
COPY --link --from=toolchain_ppc64 /opt/cross/ /opt/cross/
COPY --link --from=toolchain_ppc64le /opt/cross/ /opt/cross/
COPY --link --from=toolchain_s390x /opt/cross/ /opt/cross/
COPY --link --from=toolchain_arm /opt/cross/ /opt/cross/
COPY --link --from=toolchain_i386 /opt/cross/ /opt/cross/
COPY --link --from=staticlibs_x86_64_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_x86_64_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_x86_64_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_x86_64_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_aarch64_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_aarch64_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_aarch64_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_aarch64_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_loongarch64_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_loongarch64_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_loongarch64_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_loongarch64_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_riscv64_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_riscv64_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_riscv64_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_riscv64_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_ppc64_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_ppc64le_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_s390x_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_s390x_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_s390x_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_s390x_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_arm_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_arm_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_arm_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_arm_clang-minsize-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_i386_gcc /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_i386_clang /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_i386_clang-lto /opt/static-libs/ /opt/static-libs/
COPY --link --from=staticlibs_i386_clang-minsize-lto /opt/static-libs/ /opt/static-libs/

# Install UPX
RUN --mount=type=cache,id=ccache,target=/root/.ccache --mount=type=cache,id=pkgcache,target=/root/.pkgcache \
    /usr/local/bin/fetch.sh https://github.com/upx/upx/releases/download/v5.0.2/upx-5.0.2-amd64_linux.tar.xz - \
        | tar -xJf - -C /usr/local/bin --strip-components=1 --wildcards "*/upx"

RUN pip3 install --break-system-packages --root-user-action ignore mistletoe

# Set up git & user
RUN git config --global --add safe.directory /workspace
RUN adduser -G users -s bash -u 1000 -D mhx
USER mhx
ENTRYPOINT /workspace/.docker/build-linux.sh
